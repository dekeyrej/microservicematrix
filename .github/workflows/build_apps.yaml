name: matrix build
on:
  push:
    branches: [ "main" ]
jobs:
  read-builds:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.read-builds.outputs.apps }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Get latest and last_successful commits
        run: |
          python latest_and_last_successful.py
          export last_sha=`cat last_successful.sha`
          export sha=`cat latest.sha`
          echo "git diff-tree $last_sha $sha --no-commit-id --name-only"
          git diff-tree $last_sha $sha --no-commit-id --name-only
          git diff-tree $last_sha $sha --no-commit-id --name-only > modified_files.txt
          python files_to_builds.py
      - name: Read builds.json
        id: read-builds
        run: |
          builds_file='builds.json'
          if [[ -f "$builds_file" ]]; then
            apps=$(cat "$builds_file")
            echo "Apps to build: $apps"
          else
            echo "builds file not found"
          fi
          echo "::set-output name=apps::$apps"

  build-apps:
    needs: read-builds
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.read-builds.outputs.apps)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: "MICROSERVICE=${{matrix.app}}"
          tags: "ghcr.io/dekeyrej/${{matrix.app}}:latest"
      # - name: Echo matrix values
      #   run: |
      #     echo "Matrix values: ${{ matrix.app }}"
