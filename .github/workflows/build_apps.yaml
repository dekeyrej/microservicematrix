name: Selective Build and Push

on: 
  workflow_dispatch
  # push:
  #   branches:
  #     - main

jobs:
  determine-modified-files:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.determine-apps.outputs.apps }}
      do_work: ${{ steps.show-apps.outputs.do_work }} 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install requests

      - name: Determine modified files
        id: determine-apps
        env:
          DEBUG_FORCE_APPS: "false"
        run: |
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          apps=$(python utilities/latest_and_last_successful.py)
          echo "Apps to build: $apps"
          echo "apps=$apps" >> $GITHUB_OUTPUT

      - name: show apps to build
        id: show-apps
        run: | 
          if [ "${{ steps.determine-apps.outputs.apps }}" == "[]" ]; then
            echo "No apps to build"
            echo "do_work=false" >> $GITHUB_OUTPUT
          else
            echo "Apps to build: ${{ steps.determine-apps.outputs.apps }}"
            echo "do_work=true" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: determine-modified-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.determine-modified-files.outputs.apps) }}
    if: ${{ needs.determine-modified-files.outputs.do_work == 'true' }}
    steps:
      # - name: Show full app matrix
      #   run: echo '${{ join(fromJson(needs.determine-modified-files.outputs.apps), ", ") }}'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: show apps to build
        id: show-apps
        run: | 
          echo "Apps to build: ${{ matrix.app }}"

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: MICROSERVICE=${{ matrix.app }}
          tags: ghcr.io/dekeyrej/${{ matrix.app }}:latest